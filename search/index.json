[{"content":"docker的代理解决 这几天在docker的代理上搞了好几天，我看网上弄的教程不是太全，因此搞了好了几天才成功，特意写这个给那些有着相同的问题提供解决方案和总结自己犯过的错误。\nclash教程 首先打开clash,进入常规,然后打开局域网连接,我的端口为7890。 然后window键加r打开控制台输入ipconfig获取虚拟机的ip地址 v2rayN教程 首先打开v2rayN,进入设置，点参数设置，然后允许局域网连接(这个是在系统代理的前提上弄的)一般端口为10811 然后window键加r打开控制台输入ipconfig获取虚拟机的ip地址 最后一步(这一步都是一样的(对于这两个不同软件的代理)) docker命令 我们在docker的进程服务文件夹配置我们的代理设置，如果没有我们就新建这个文件夹：\n1 sudo mkdir /etc/systemd/system/docker.service.d 然后在docker.service.d文件夹里新建我们的代理文件proxy.conf\n1 sudo vim /etc/systemd/system/docker.service.d/proxy.conf 并把文件写如下面这个格式：\n1 2 3 [Service] Environment=\u0026#34;HTTP_PROXY=代理服务器ip:port\u0026#34; Environment=\u0026#34;HTTPS_PROXY=代理服务器ip:port\u0026#34; 保存并退出proxy.conf文件，和更改镜像源一样，重启docker，并重启daemon进程。\n1 2 sudo systemctl daemon-reload\t#重启daemon进程 sudo systemctl restart docker\t#重启docker 最后我们仍然是验证一下是否修改成功，运行\n1 docker info 在长串info信息中如果出现类似下文的内容：\n1 2 HTTP Proxy: 代理服务器ip:port HTTPS Proxy: 代理服务器ip:port 好了，可以拉取镜像了😁\n本文引自https://blog.csdn.net/Lichen0196/article/details/137355517,https://blog.csdn.net/weixin_46264846/article/details/142363390 ,https://www.jianshu.com/p/6c7abd4adc9b\n","date":"2024-10-02T11:46:05+08:00","permalink":"https://getshhi.github.io/p/%E5%9C%A8linux%E4%B8%8A%E9%83%A8%E7%BD%B2docker%E7%9A%84%E4%BB%A3%E7%90%86/","title":"在Linux上部署Docker的代理"},{"content":"java的网络编程 1.java网络编程的基本概念 IP 地址：用于标识网络中的计算机。\n端口号：用于标识计算机上的具体应用程序或进程。\nSocket（套接字）：网络通信的基本单位，通过 IP 地址和端口号标识。\n协议：网络通信的规则，如 TCP（传输控制协议）和 UDP（用户数据报协议）。\n2.java网络编程的核心类 Socket：用于创建客户端套接字。\nServerSocket：用于创建服务器套接字。\nDatagramSocket：用于创建支持 UDP 协议的套接字。\nURL：用于处理统一资源定位符。\nURLConnection：用于读取和写入 URL 引用的资源。\n3.代码实现 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 import java.io.*; import java.net.ServerSocket; import java.net.Socket; //服务端 public class TCPServer { public static void main(String[] args) { try (ServerSocket serverSocket = new ServerSocket(8080)) { while (true) { Socket socket = serverSocket.accept(); new ServerThread(socket).start(); //synchronized } } catch (IOException e) { e.printStackTrace(); } } } class ServerThread extends Thread { private Socket socket; public ServerThread(Socket socket){ this.socket = socket; } public void start(){ try(PrintWriter out = new PrintWriter(socket.getOutputStream(),true); BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()))){ String message = in.readLine(); //接受消息 out.println(\u0026#34;Hello Server~\u0026#34;); System.out.println(\u0026#34;message = \u0026#34; + message); } catch (IOException e) { e.printStackTrace(); } } } import java.io.*; import java.net.Socket; import java.net.UnknownHostException; //客户端 public class TCPClient { public static void main(String[] args) { try(Socket socket = new Socket(\u0026#34;localhost\u0026#34;,8080); PrintWriter out = new PrintWriter(socket.getOutputStream(),true); BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()))) { out.println(\u0026#34;Hello Server~\u0026#34;); String message = in.readLine(); System.out.println(\u0026#34;message = \u0026#34; + message); } catch (Exception e) { e.printStackTrace(); } } } 4.总结 IP地址：外卖员要送餐到的大楼（例如：腾讯大楼）。\n端口号：外卖员要到大楼里的具体房间（例如：1001）。\nSocket：外卖员通过手机（Socket）与我们通信，告知外卖已到。\n协议：我们默认使用中文对话。\n","date":"2024-09-27T12:33:05+08:00","permalink":"https://getshhi.github.io/p/javaweb/","title":"JavaWeb"}]